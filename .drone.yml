---
kind: pipeline
name: default

steps:
  - name: build
    image: docker
    commands:
      - docker build -t sq --build-arg SQUIDEX__VERSION=$${DRONE_TAG} .
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    when:
      event:
        - push
        - pull_request
      branch:
        - master

  - name: start-squidex
    image: docker
    commands:
      - cd backend/tests
      - docker-compose up -d
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    when:
      event:
        - push
        - pull_request
      branch:
        - master

  - name: test-squidex
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
    environment:
      CONFIG__SERVER__URL: http://localhost:8080
      CONFIG__WAIT: 60
    commands:
      - dotnet test backend/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=Dependencies
    when:
      event:
        - push
        - pull_request
      branch:
        - master

  - name: stop-squidex
    image: docker
    commands:
      - cd backend/tests
      - docker-compose down
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    when:
      status:
        - failure
        - success
      event:
        - push
        - pull_request
      branch:
        - master

  - name: push_dev
    image: docker
    commands:
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - docker tag sq squidex/squidex:dev
      - docker tag sq squidex/squidex:dev-$${DRONE_BUILD_NUMBER}
      - docker push squidex/squidex:dev
      - docker push squidex/squidex:dev-$${DRONE_BUILD_NUMBER}
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    environment:
      DOCKER_USERNAME:
        from_secret: DOCKER_USERNAME
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    when:
      event:
        - push
      branch:
        - master

  - name: push_release
    image: docker
    commands:
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - docker tag sq squidex/squidex:latest
      - docker tag sq squidex/squidex:$${DRONE_TAG}
      - docker push squidex/squidex:latest
      - docker push squidex/squidex:$${DRONE_TAG}
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    environment:
      DOCKER_USERNAME:
        from_secret: DOCKER_USERNAME
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    when:
      event:
        - tag

  - name: build_binaries
    image: docker
    commands:
      - docker create --name sqc sq
      - docker cp sqc:/app/. /build
    volumes:
      - name: build
        path: /build
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    when:
      event:
        - tag

  - name: binaries_zip
    image: kramos/alpine-zip
    commands:
      -  cd /build && zip -r /release/binaries.zip .
    volumes:
      - name: build
        path: /build
      - name: release
        path: /release
    when:
      event:
        - tag

  - name: binaries_publish  
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_apikey
      files:
        - /release/binaries.zip
    volumes:
      - name: release
        path: /release
    when:
      event:
        - tag

  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
    when:
      status:
        - failure
        - success

  - name: cleanup-build
    image: docker
    commands:
      - docker rm sqc
      - docker rmi sq
    volumes:
      - name: docker1
        path: /var/run/docker.sock
      - name: docker2
        path: /var/lib/docker
    when:
      status:
        - failure
        - success
      event:
        - tag
      
volumes:
  - name: build
    temp: {}
  - name: release
    temp: {}
  - name: docker1
    host:
      path: /var/run/docker.sock
  - name: docker2
    host:
      path: /var/lib/docker